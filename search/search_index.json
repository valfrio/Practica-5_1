{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pr\u00e1ctica 5.1","text":"<p>Hay dos partes en esta pr\u00e1ctica que se deben realizar en orden.</p>"},{"location":"pr%C3%A1ctica%201/","title":"Primera parte de la pr\u00e1ctica","text":""},{"location":"pr%C3%A1ctica%201/#creacion-del-readmemd","title":"Creaci\u00f3n del README.md","text":"<p>Antes de nada durante toda la pr\u00e1ctica usar\u00e9 distintos alias. Por ejemplo para commit -m cr\u00e9e el alias comm. Para log --one-line logone. c</p> <p>Ahora s\u00ed creamos el readme.md .</p>"},{"location":"pr%C3%A1ctica%201/#commit-inicial","title":"Commit inicial","text":"<p>Hacemos un commit con el mensaje \"Comenzamos con los ejercicios de Git\"</p> <p></p>"},{"location":"pr%C3%A1ctica%201/#push-inicial","title":"Push inicial","text":"<p>Subimos los cambios al repositorio remoto con el comando <code>git push</code></p> <p></p>"},{"location":"pr%C3%A1ctica%201/#ignorar-archivos","title":"Ignorar archivos","text":"<p>Creamos un archivo llamado privado.txt en la carpeta privada y lo a\u00f1adimos al .gitignore</p> <p></p>"},{"location":"pr%C3%A1ctica%201/#anadir-fichero-1txt-crear-el-tag-y-subirlo","title":"A\u00f1adir fichero 1.txt, crear el tag y subirlo","text":"<p>A\u00f1adimos el fichero, creamos el tag usando el comando <code>git tag v0.1</code> y subimos los cambios al repositorio remoto.</p> <p></p>"},{"location":"pr%C3%A1ctica%201/#cuenta-de-github","title":"Cuenta de github","text":"<p>Para ello debemos de ir a ajustes, a perfil y modificar la foto de perfil. Para el doble factor de autenticaci\u00f3n debemos de activar la clave ssh. Para ello debemos de generar una clave, a\u00f1adirla al agente del ordenador y por \u00faltimo pasar la clave p\u00fablica a github. Link a los distintos tutoriales que segu\u00ed para hacerlo.</p> <p>AHora si adjunto foto de mi cuenta con el doble factor de autenticaci\u00f3n activado.</p> <p></p>"},{"location":"pr%C3%A1ctica%201/#uso-social-de-github","title":"Uso social de github","text":"<p>Busco en la lupa el nombre de mis compa\u00f1eros y les sigo.</p> <p></p> <p>Seguir los repositorios y darle una estrella:</p> <p></p> <p></p>"},{"location":"pr%C3%A1ctica%201/#crear-una-tabla","title":"Crear una tabla","text":"<p>Para ello debemos usar markdown. El formato es simple | para separar columnas y - para las filas.</p> <p></p>"},{"location":"pr%C3%A1ctica%201/#colaboradores","title":"Colaboradores","text":"<p>Para a\u00f1adir colaboradores debemos de ir a ajustes, a colaboradores y a\u00f1adir el nombre de usuario de la persona que queremos a\u00f1adir.</p> <p></p>"},{"location":"pr%C3%A1ctica%201/#crea-una-rama-v02","title":"Crea una rama v0.2","text":"<p>Para ello debemos de usar el comando <code>git checkout -b v0.2</code></p> <p></p>"},{"location":"pr%C3%A1ctica%201/#anadir-fichero-2txt-y-creamos-la-rama-remota","title":"A\u00f1adir fichero 2.txt y creamos la rama remota","text":"<p>Creamos el fichero 2.txt y lo a\u00f1adimos al repositorio. Creamos la rama remota con el comando <code>git push -u origin v0.2</code></p> <p></p>"},{"location":"pr%C3%A1ctica%201/#merge-directo","title":"Merge directo","text":"<p>Para hacer un merge directo debemos de ir a la rama master y hacer el comando <code>git merge v0.2</code></p> <p></p>"},{"location":"pr%C3%A1ctica%201/#merge-con-conflicto","title":"Merge con conflicto","text":"<p>Crearemos un conflicto en el fichero 1.txt. Para ello, escribimos Hola en la rama master y Adios en la rama v0.2. Ahora debemos de hacer un commit y acto seguido un merge. Al hacer el merge nos saldr\u00e1 un conflicto. </p> <p>Creaci\u00f3n del conflicto:</p> <p></p> <p></p> <p>Merge con conflicto:</p> <p></p>"},{"location":"pr%C3%A1ctica%201/#listado-de-ramas","title":"Listado de ramas","text":"<p>Para listar las ramas debemos de usar el comando <code>git branch --merged</code> para ver las ramas que han sido fusionadas y <code>git branch --no-merged</code> para ver las que no han sido fusionadas.</p> <p></p>"},{"location":"pr%C3%A1ctica%201/#arreglar-el-conflicto","title":"Arreglar el conflicto","text":"<p>Para arreglar el conflicto debemos de abrir el fichero con conflicto y borrar las lineas que no queremos. Una vez hecho esto debemos de hacer un commit y un push.</p> <p></p>"},{"location":"pr%C3%A1ctica%201/#borrar-rama","title":"Borrar rama","text":"<p>Primero creamos un tag con el comando <code>git tag v0.2</code> y luego borramos la rama con el comando <code>git branch -D v0.2</code></p> <p></p>"},{"location":"pr%C3%A1ctica%201/#listado-de-cambios","title":"Listado de cambios","text":"<p>Para ver los cambios que se han hecho en el repositorio debemos de usar el comando <code>git log --oneline</code> con m\u00e1s opciones como <code>--graph</code> o <code>--decorate</code> para verlo de una forma m\u00e1s visual.</p> <p></p>"},{"location":"pr%C3%A1ctica%202/","title":"Segunda parte de la pr\u00e1ctica","text":""},{"location":"pr%C3%A1ctica%202/#creacion-y-actualizacion-de-un-repositorio","title":"Creaci\u00f3n y actualizaci\u00f3n de un repositorio","text":""},{"location":"pr%C3%A1ctica%202/#ejercicio-1","title":"Ejercicio 1","text":""},{"location":"pr%C3%A1ctica%202/#configurar-git-definiendo-el-nombre-del-usuario-el-correo-electronico-y-activar-el-coloreado-de-la-salida","title":"Configurar Git definiendo el nombre del usuario, el correo electr\u00f3nico y activar el coloreado de la salida.","text":"<p>Usamos los comandos de git config:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-2","title":"Ejercicio 2","text":""},{"location":"pr%C3%A1ctica%202/#crear-un-repositorio-nuevo-con-el-nombre-libro-y-mostrar-su-contenido","title":"Crear un repositorio nuevo con el nombre libro y mostrar su contenido.","text":"<p>Para crear un repositorio nuevo usamos el comando git init:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-3","title":"Ejercicio 3","text":""},{"location":"pr%C3%A1ctica%202/#comprobar-el-estado-del-repositorio-crear-un-fichero-indicetxt-con-el-siguiente-contenido-capitulo-1-introduccion-a-git-capitulo-2-flujo-de-trabajo-basico-capitulo-3-repositorios-remotos-comprobar-de-nuevo-el-estado-del-repositorio-anadir-el-fichero-a-la-zona-de-intercambio-temporal-volver-a-comprobar-una-vez-mas-el-estado-del-repositorio","title":"Comprobar el estado del repositorio. Crear un fichero indice.txt con el siguiente contenido: Cap\u00edtulo 1: Introducci\u00f3n a Git Cap\u00edtulo 2: Flujo de trabajo b\u00e1sico Cap\u00edtulo 3: Repositorios remotos. Comprobar de nuevo el estado del repositorio. A\u00f1adir el fichero a la zona de intercambio temporal. Volver a comprobar una vez m\u00e1s el estado del repositorio.","text":"<p>Usamos el comando git status para comprobar el estado del repositorio, git add para a\u00f1adir el fichero a la zona de intercambio temporal y git status para comprobar de nuevo el estado del repositorio:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-4","title":"Ejercicio 4","text":""},{"location":"pr%C3%A1ctica%202/#realizar-un-commit-de-los-ultimos-cambios-con-el-mensaje-anadido-indice-del-libro-y-ver-el-estado-del-repositorio","title":"Realizar un commit de los \u00faltimos cambios con el mensaje \u201cA\u00f1adido \u00edndice del libro.\u201d y ver el estado del repositorio.","text":"<p>Usamos el comando git commit -m \"A\u00f1adido \u00edndice del libro.\" para realizar un commit de los \u00faltimos cambios y git status para ver el estado del repositorio:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-5","title":"Ejercicio 5","text":""},{"location":"pr%C3%A1ctica%202/#cambiar-el-fichero-indicetxt-para-que-contenga-lo-siguiente-capitulo-1-introduccion-a-git-capitulo-2-flujo-de-trabajo-basico-capitulo-3-gestion-de-ramas-capitulo-4-repositorios-remotos-mostrar-los-cambios-con-respecto-a-la-ultima-version-guardada-en-el-repositorio-hacer-un-commit-de-los-cambios-con-el-mensaje-anadido-capitulo-3-sobre-gestion-de-ramas","title":"Cambiar el fichero indice.txt para que contenga lo siguiente: Cap\u00edtulo 1: Introducci\u00f3n a Git Cap\u00edtulo 2: Flujo de trabajo b\u00e1sico Cap\u00edtulo 3: Gesti\u00f3n de ramas Cap\u00edtulo 4: Repositorios remotos. Mostrar los cambios con respecto a la \u00faltima versi\u00f3n guardada en el repositorio. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 3 sobre gesti\u00f3n de ramas\u201d.","text":"<p>Usamos el comando git diff para mostrar los cambios con respecto a la \u00faltima versi\u00f3n guardada en el repositorio, git commit -m \"A\u00f1adido cap\u00edtulo 3 sobre gesti\u00f3n de ramas\" para hacer un commit de los cambios y git status para ver el estado del repositorio:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-6","title":"Ejercicio 6","text":""},{"location":"pr%C3%A1ctica%202/#mostrar-los-cambios-de-la-ultima-version-del-repositorio-con-respecto-a-la-anterior-cambiar-el-mensaje-del-ultimo-commit-por-anadido-capitulo-3-sobre-gestion-de-ramas-al-indice-volver-a-mostrar-los-ultimos-cambios-del-repositorio","title":"Mostrar los cambios de la \u00faltima versi\u00f3n del repositorio con respecto a la anterior. Cambiar el mensaje del \u00faltimo commit por \u201cA\u00f1adido cap\u00edtulo 3 sobre gesti\u00f3n de ramas al \u00edndice.\u201d Volver a mostrar los \u00faltimos cambios del repositorio.","text":"<p>Usaremos git show para mostrar los cambios de la \u00faltima versi\u00f3n del repositorio con respecto a la anterior, git commit --amend -m \"A\u00f1adido cap\u00edtulo 3 sobre gesti\u00f3n de ramas al \u00edndice.\" para cambiar el mensaje del \u00faltimo commit y git show para volver a mostrar los \u00faltimos cambios del repositorio:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicios-de-manejo-del-historial-de-cambios","title":"Ejercicios de manejo del historial de cambios","text":""},{"location":"pr%C3%A1ctica%202/#ejercicio-1_1","title":"Ejercicio 1","text":""},{"location":"pr%C3%A1ctica%202/#mostrar-el-historial-de-cambios-del-repositorio-crear-la-carpeta-capitulos-y-crear-dentro-de-ella-el-fichero-capitulo1txt-con-el-siguiente-texto-git-es-un-sistema-de-control-de-versiones-ideado-por-linus-torvalds-anadir-los-cambios-a-la-zona-de-intercambio-temporal-hacer-un-commit-de-los-cambios-con-el-mensaje-anadido-capitulo-1-volver-a-mostrar-el-historial-de-cambios-del-repositorio","title":"Mostrar el historial de cambios del repositorio. Crear la carpeta capitulos y crear dentro de ella el fichero capitulo1.txt con el siguiente texto: Git es un sistema de control de versiones ideado por Linus Torvalds. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 1.\u201d Volver a mostrar el historial de cambios del repositorio.","text":"<p>Usaremos el comando git log para mostrar el historial de cambios del repositorio con las opciones --oneline, --decorate --graph --all. Crearemos la carpeta capitulos y dentro de ella el fichero capitulo1.txt con el texto indicado, a\u00f1adiremos los cambios a la zona de intercambio temporal y haremos un commit de los cambios con el mensaje \"A\u00f1adido cap\u00edtulo 1.\" y volveremos a mostrar el historial de cambios del repositorio:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-2_1","title":"Ejercicio 2","text":""},{"location":"pr%C3%A1ctica%202/#crear-el-fichero-capitulo2txt-en-la-carpeta-capitulos-con-el-siguiente-texto-el-flujo-de-trabajo-basico-con-git-consiste-en-1-hacer-cambios-en-el-repositorio-2-anadir-los-cambios-a-la-zona-de-intercambio-temporal-3-hacer-un-commit-de-los-cambios-anadir-los-cambios-a-la-zona-de-intercambio-temporalhacer-un-commit-de-los-cambios-con-el-mensaje-anadido-capitulo-2-mostrar-las-diferencias-entre-la-ultima-version-y-dos-versiones-anteriores","title":"Crear el fichero capitulo2.txt en la carpeta capitulos con el siguiente texto: El flujo de trabajo b\u00e1sico con Git consiste en: 1- Hacer cambios en el repositorio. 2- A\u00f1adir los cambios a la zona de intercambio temporal. 3- Hacer un commit de los cambios. A\u00f1adir los cambios a la zona de intercambio temporal.Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 2.\u201d Mostrar las diferencias entre la \u00faltima versi\u00f3n y dos versiones anteriores.","text":"<p>Crearemos el fichero capitulo2.txt en la carpeta capitulos con el texto indicado, a\u00f1adiremos los cambios a la zona de intercambio temporal y haremos un commit de los cambios con el mensaje \"A\u00f1adido cap\u00edtulo 2.\" y mostraremos las diferencias entre la \u00faltima versi\u00f3n y dos versiones anteriores con git diff;</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-3_1","title":"Ejercicio 3","text":""},{"location":"pr%C3%A1ctica%202/#crear-el-fichero-capitulo3txt-en-la-carpeta-capitulos-con-el-siguiente-texto-git-permite-la-creacion-de-ramas-lo-que-permite-tener-distintas-versiones-del-mismo-proyecto-y-trabajar-de-manera-simultanea-en-ellas-anadir-los-cambios-a-la-zona-de-intercambio-temporal-hacer-un-commit-de-los-cambios-con-el-mensaje-anadido-capitulo-3-mostrar-las-diferencias-entre-la-primera-y-la-ultima-version-del-repositorio","title":"Crear el fichero capitulo3.txt en la carpeta capitulos con el siguiente texto: Git permite la creaci\u00f3n de ramas lo que permite tener distintas versiones del mismo proyecto y trabajar de manera simultanea en ellas. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 3.\u201d Mostrar las diferencias entre la primera y la \u00faltima versi\u00f3n del repositorio.","text":"<p>Crearemos el fichero capitulo3.txt en la carpeta capitulos con el texto indicado, a\u00f1adiremos los cambios a la zona de intercambio temporal y haremos un commit de los cambios con el mensaje \"A\u00f1adido cap\u00edtulo 3.\" y mostraremos las diferencias entre la primera y la \u00faltima versi\u00f3n del repositorio con git diff;</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-4_1","title":"Ejercicio 4","text":""},{"location":"pr%C3%A1ctica%202/#anadir-al-final-del-fichero-indicetxt-la-siguiente-linea-capitulo-5-conceptos-avanzados-anadir-los-cambios-a-la-zona-de-intercambio-temporal-hacer-un-commit-de-los-cambios-con-el-mensaje-anadido-capitulo-5-al-indicemostrar-quien-ha-hecho-cambios-sobre-el-fichero-indicetxt","title":"A\u00f1adir al final del fichero indice.txt la siguiente l\u00ednea: Cap\u00edtulo 5: Conceptos avanzados. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 5 al \u00edndice.\u201d.Mostrar qui\u00e9n ha hecho cambios sobre el fichero indice.txt.","text":"<p>A\u00f1adiremos al final del fichero indice.txt la l\u00ednea indicada, a\u00f1adiremos los cambios a la zona de intercambio temporal y haremos un commit de los cambios con el mensaje \"A\u00f1adido cap\u00edtulo 5 al \u00edndice.\" y mostraremos qui\u00e9n ha hecho cambios sobre el fichero indice.txt con git blame;</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicicos-de-deshacer-cambios","title":"Ejercicicos de deshacer cambios","text":""},{"location":"pr%C3%A1ctica%202/#ejercicio-1_2","title":"Ejercicio 1","text":""},{"location":"pr%C3%A1ctica%202/#eliminar-la-ultima-linea-del-fichero-indicetxt-y-guardarlo-comprobar-el-estado-del-repositorio-deshacer-los-cambios-realizados-en-el-fichero-indicetxt-para-volver-a-la-version-anterior-del-fichero-volver-a-comprobar-el-estado-del-repositorio","title":"Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. Comprobar el estado del repositorio. Deshacer los cambios realizados en el fichero indice.txt para volver a la versi\u00f3n anterior del fichero. Volver a comprobar el estado del repositorio.","text":"<p>Eliminaremos la \u00faltima l\u00ednea del fichero indice.txt y guardaremos los cambios, comprobaremos el estado del repositorio, desharemos los cambios realizados en el fichero indice.txt para volver a la versi\u00f3n anterior del fichero usando git restore y volveremos a comprobar el estado del repositorio:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-2_2","title":"Ejercicio 2","text":""},{"location":"pr%C3%A1ctica%202/#eliminar-la-ultima-linea-del-fichero-indicetxt-y-guardarlo-anadir-los-cambios-a-la-zona-de-intercambio-temporal-comprobar-de-nuevo-el-estado-del-repositorio-quitar-los-cambios-de-la-zona-de-intercambio-temporal-pero-mantenerlos-en-el-directorio-de-trabajo-comprobar-de-nuevo-el-estado-del-repositorio-deshacer-los-cambios-realizados-en-el-fichero-indicetxt-para-volver-a-la-version-anterior-del-fichero-volver-a-comprobar-el-estado-del-repositorio","title":"Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. A\u00f1adir los cambios a la zona de intercambio temporal. Comprobar de nuevo el estado del repositorio. Quitar los cambios de la zona de intercambio temporal, pero mantenerlos en el directorio de trabajo. Comprobar de nuevo el estado del repositorio. Deshacer los cambios realizados en el fichero indice.txt para volver a la versi\u00f3n anterior del fichero. Volver a comprobar el estado del repositorio.","text":"<p>Eliminaremos la \u00faltima l\u00ednea del fichero indice.txt y guardaremos los cambios, a\u00f1adiremos los cambios a la zona de intercambio temporal, comprobaremos de nuevo el estado del repositorio, quitaremos los cambios de la zona de intercambio temporal usando git restore --staged, pero los mantendremos en el directorio de trabajo, comprobaremos de nuevo el estado del repositorio, desharemos los cambios realizados en el fichero indice.txt para volver a la versi\u00f3n anterior del fichero con git restore y volveremos a comprobar el estado del repositorio:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-3_2","title":"Ejercicio 3","text":""},{"location":"pr%C3%A1ctica%202/#eliminar-la-ultima-linea-del-fichero-indicetxt-y-guardarlo-eliminar-el-fichero-capituloscapitulo3txt-anadir-un-fichero-nuevo-capituloscapitulo4txt-vacio-anadir-los-cambios-a-la-zona-de-intercambio-temporal-comprobar-de-nuevo-el-estado-del-repositorio-quitar-los-cambios-de-la-zona-de-intercambio-temporal-pero-mantenerlos-en-el-directorio-de-trabajo-comprobar-de-nuevo-el-estado-del-repositorio-deshacer-los-cambios-realizados-para-volver-a-la-version-del-repositorio-volver-a-comprobar-el-estado-del-repositorio","title":"Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. Eliminar el fichero capitulos/capitulo3.txt. A\u00f1adir un fichero nuevo capitulos/capitulo4.txt vac\u00edo. A\u00f1adir los cambios a la zona de intercambio temporal. Comprobar de nuevo el estado del repositorio. Quitar los cambios de la zona de intercambio temporal, pero mantenerlos en el directorio de trabajo. Comprobar de nuevo el estado del repositorio. Deshacer los cambios realizados para volver a la versi\u00f3n del repositorio. Volver a comprobar el estado del repositorio.","text":"<p>Eliminaremos la \u00faltima l\u00ednea del fichero indice.txt y guardaremos los cambios, eliminaremos el fichero capitulos/capitulo3.txt, a\u00f1adiremos un fichero nuevo capitulos/capitulo4.txt vac\u00edo, a\u00f1adiremos los cambios a la zona de intercambio temporal, comprobaremos de nuevo el estado del repositorio, quitaremos los cambios de la zona de intercambio temporal usando git restore --staged, pero los mantendremos en el directorio de trabajo, comprobaremos de nuevo el estado del repositorio, desharemos los cambios realizados para volver a la versi\u00f3n del repositorio con git restore y volveremos a comprobar el estado del repositorio:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-4_2","title":"Ejercicio 4","text":""},{"location":"pr%C3%A1ctica%202/#eliminar-la-ultima-linea-del-fichero-indicetxt-y-guardarlo-eliminar-el-fichero-capituloscapitulo3txt-anadir-los-cambios-a-la-zona-de-intercambio-temporal-y-hacer-un-commit-con-el-mensaje-borrado-accidental-comprobar-el-historial-del-repositorio-deshacer-el-ultimo-commit-pero-mantener-los-cambios-anteriores-en-el-directorio-de-trabajo-y-la-zona-de-intercambio-temporalcomprobar-el-historial-y-el-estado-del-repositorio-volver-a-hacer-el-commit-con-el-mismo-mensaje-de-antes-deshacer-el-ultimo-commit-y-los-cambios-anteriores-del-directorio-de-trabajo-volviendo-a-la-version-anterior-del-repositorio-comprobar-de-nuevo-el-historial-y-el-estado-del-repositorio","title":"Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. Eliminar el fichero capitulos/capitulo3.txt. A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cBorrado accidental.\u201d Comprobar el historial del repositorio. Deshacer el \u00faltimo commit pero mantener los cambios anteriores en el directorio de trabajo y la zona de intercambio temporal.Comprobar el historial y el estado del repositorio. Volver a hacer el commit con el mismo mensaje de antes. Deshacer el \u00faltimo commit y los cambios anteriores del directorio de trabajo volviendo a la versi\u00f3n anterior del repositorio. Comprobar de nuevo el historial y el estado del repositorio.","text":"<p>Eliminaremos la \u00faltima l\u00ednea del fichero indice.txt y guardaremos los cambios, eliminaremos el fichero capitulos/capitulo3.txt, a\u00f1adiremos los cambios a la zona de intercambio temporal y haremos un commit con el mensaje \"Borrado accidental.\", comprobaremos el historial del repositorio, desharemos el \u00faltimo commit pero mantendremos los cambios anteriores en el directorio de trabajo y la zona de intercambio temporal con git reset --soft HEAD~1</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicios-de-gestion-de-ramas","title":"Ejercicios de gesti\u00f3n de ramas","text":""},{"location":"pr%C3%A1ctica%202/#ejercicio-1_3","title":"Ejercicio 1","text":""},{"location":"pr%C3%A1ctica%202/#crear-una-nueva-rama-bibliografia-y-mostrar-las-ramas-del-repositorio","title":"Crear una nueva rama bibliografia y mostrar las ramas del repositorio.","text":"<p>Crearemos una nueva rama bibliografia con el comando git branch bibliografia y mostraremos las ramas del repositorio con el comando git branch:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-2_3","title":"Ejercicio 2","text":""},{"location":"pr%C3%A1ctica%202/#crear-el-fichero-capituloscapitulo4txt-y-anadir-el-texto-siguiente-en-este-capitulo-veremos-como-usar-github-para-alojar-repositorios-en-remotoanadir-los-cambios-a-la-zona-de-intercambio-temporal-hacer-un-commit-con-el-mensaje-anadido-capitulo-4-mostrar-la-historia-del-repositorio-incluyendo-todas-las-ramas","title":"Crear el fichero capitulos/capitulo4.txt y a\u00f1adir el texto siguiente En este cap\u00edtulo veremos c\u00f3mo usar GitHub para alojar repositorios en remoto.A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit con el mensaje \u201cA\u00f1adido cap\u00edtulo 4.\u201d Mostrar la historia del repositorio incluyendo todas las ramas.","text":"<p>A\u00f1ado el archivo y hago el commit:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-3_3","title":"Ejercicio 3","text":""},{"location":"pr%C3%A1ctica%202/#cambiar-a-la-rama-bibliografia-crear-el-fichero-bibliografiatxt-y-anadir-la-siguiente-referencia-chacon-s-and-straub-b-pro-git-apress-anadir-los-cambios-a-la-zona-de-intercambio-temporal-hacer-un-commit-con-el-mensaje-anadida-primera-referencia-bibliografica-mostrar-la-historia-del-repositorio-incluyendo-todas-las-ramas","title":"Cambiar a la rama bibliografia. Crear el fichero bibliografia.txt y a\u00f1adir la siguiente referencia: Chacon, S. and Straub, B. Pro Git. Apress. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit con el mensaje \u201cA\u00f1adida primera referencia bibliogr\u00e1fica.\u201d Mostrar la historia del repositorio incluyendo todas las ramas.","text":"<p>Cambiamos a la rama bibliografia, creamos el archivo y hacemos el commit:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-4_3","title":"Ejercicio 4","text":""},{"location":"pr%C3%A1ctica%202/#fusionar-la-rama-bibliografia-con-la-rama-master-mostrar-la-historia-del-repositorio-incluyendo-todas-las-ramas-eliminar-la-rama-bibliografia-mostrar-de-nuevo-la-historia-del-repositorio-incluyendo-todas-las-ramas","title":"Fusionar la rama bibliografia con la rama master. Mostrar la historia del repositorio incluyendo todas las ramas. Eliminar la rama bibliografia. Mostrar de nuevo la historia del repositorio incluyendo todas las ramas.","text":"<p>Fusionamos la rama bibliografia con la rama main, mostramos la historia del repositorio incluyendo todas las ramas, eliminamos la rama bibliografia y mostramos de nuevo la historia del repositorio incluyendo todas las ramas:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-5_1","title":"Ejercicio 5","text":""},{"location":"pr%C3%A1ctica%202/#crear-la-rama-bibliografia-cambiar-a-la-rama-bibliografia-cambiar-el-fichero-bibliografiatxt-para-que-contenga-las-siguientes-referencias-scott-chacon-and-ben-straub-pro-git-apress-ryan-hodson-rys-git-tutorial-smashwords-2014-anadir-los-cambios-a-la-zona-de-intercambio-temporal-y-hacer-un-commit-con-el-mensaje-anadida-nueva-referencia-bibliografica-cambiar-a-la-rama-master-cambiar-el-fichero-bibliografiatxt-para-que-contenga-las-siguientes-referencias-chacon-s-and-straub-b-pro-git-apress-loeliger-j-and-mccullough-m-version-control-with-git-oreilly-anadir-los-cambios-a-la-zona-de-intercambio-temporal-y-hacer-un-commit-con-el-mensaje-anadida-nueva-referencia-bibliografica-fusionar-la-rama-bibliografia-con-la-rama-masterresolver-el-conflicto-dejando-el-fichero-bibliografiatxt-con-las-referencias-chacon-s-and-straub-b-pro-git-apress-loeliger-j-and-mccullough-m-version-control-with-git-oreilly-hodson-r-rys-git-tutorial-smashwords-2014-anadir-los-cambios-a-la-zona-de-intercambio-temporal-y-hacer-un-commit-con-el-mensaje-resuelto-conflicto-de-bibliografia-mostrar-la-historia-del-repositorio-incluyendo-todas-las-ramas","title":"Crear la rama bibliografia. Cambiar a la rama bibliografia. Cambiar el fichero bibliografia.txt para que contenga las siguientes referencias: Scott Chacon and Ben Straub. Pro Git. Apress. Ryan Hodson. Ry\u2019s Git Tutorial. Smashwords (2014). A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cA\u00f1adida nueva referencia bibliogr\u00e1fica.\u201d Cambiar a la rama master. Cambiar el fichero bibliografia.txt para que contenga las siguientes referencias: Chacon, S. and Straub, B. Pro Git. Apress. Loeliger, J. and McCullough, M. Version control with Git. O\u2019Reilly. A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cA\u00f1adida nueva referencia bibliogr\u00e1fica.\u201d Fusionar la rama bibliografia con la rama master.Resolver el conflicto dejando el fichero bibliografia.txt con las referencias: Chacon, S. and Straub, B. Pro Git. Apress. Loeliger, J. and McCullough, M. Version control with Git. O\u2019Reilly. Hodson, R. Ry\u2019s Git Tutorial. Smashwords (2014). A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cResuelto conflicto de bibliograf\u00eda.\u201d Mostrar la historia del repositorio incluyendo todas las ramas.","text":"<p>Creamos la rama bibliografia, cambiamos a la rama bibliografia, cambiamos el fichero bibliografia.txt para que contenga las referencias indicadas, a\u00f1adimos los cambios a la zona de intercambio temporal y hacemos un commit con el mensaje \"A\u00f1adida nueva referencia bibliogr\u00e1fica.\", cambiamos a la rama main, cambiamos el fichero bibliografia.txt para que contenga las referencias indicadas, a\u00f1adimos los cambios a la zona de intercambio temporal y hacemos un commit con el mensaje \"A\u00f1adida nueva referencia bibliogr\u00e1fica.\", fusionamos la rama bibliografia con la rama main, resolvemos el conflicto dejando el fichero bibliografia.txt con las referencias indicadas, a\u00f1adimos los cambios a la zona de intercambio temporal y hacemos un commit con el mensaje \"Resuelto conflicto de bibliograf\u00eda.\" y mostramos la historia del repositorio incluyendo todas las ramas:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicios-de-repositorios-remotos","title":"Ejercicios de repositorios remotos","text":""},{"location":"pr%C3%A1ctica%202/#ejercicio-1_4","title":"Ejercicio 1","text":""},{"location":"pr%C3%A1ctica%202/#crear-un-nuevo-repositorio-publico-en-github-con-el-nombre-libro-git-anadirlo-al-repositorio-local-del-libro-mostrar-todos-los-repositorios-remotos-configurados","title":"Crear un nuevo repositorio p\u00fablico en GitHub con el nombre libro-git. A\u00f1adirlo al repositorio local del libro. Mostrar todos los repositorios remotos configurados.","text":"<p>Creamos un nuevo repositorio p\u00fablico en GitHub con el nombre libro-git, a\u00f1adimos el repositorio remoto al repositorio local del libro con el comando git remote add origin:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-2_4","title":"Ejercicio 2","text":""},{"location":"pr%C3%A1ctica%202/#anadir-los-cambios-del-repositorio-local-al-repositorio-remoto-de-github-acceder-a-github-y-comprobar-que-se-han-subido-los-cambios-mostrando-el-historial-de-versiones","title":"A\u00f1adir los cambios del repositorio local al repositorio remoto de GitHub. Acceder a GitHub y comprobar que se han subido los cambios mostrando el historial de versiones.","text":"<p>A\u00f1adimos los cambios del repositorio local al repositorio remoto de GitHub con el comando git push origin main y accedemos a GitHub para comprobar que se han subido los cambios mostrando el historial de versiones:</p> <p></p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-3_4","title":"Ejercicio 3","text":""},{"location":"pr%C3%A1ctica%202/#colaborar-en-el-repositorio-remoto-libro-git-de-otro-usuario-clonar-su-repositorio-libro-git-anadir-el-fichero-autorestxt-que-contenga-el-nombre-del-usuario-y-su-correo-electronico-anadir-los-cambios-a-la-zona-de-intercambio-temporal-hacer-un-commit-con-el-mensaje-anadido-autor-subir-los-cambios-al-repositorio-remoto","title":"Colaborar en el repositorio remoto libro-git de otro usuario. Clonar su repositorio libro-git. A\u00f1adir el fichero autores.txt que contenga el nombre del usuario y su correo electr\u00f3nico. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit con el mensaje \u201cA\u00f1adido autor.\u201d Subir los cambios al repositorio remoto.","text":"<p>Lo hacemos con el usuario de Jaime Grueso:</p> <p></p>"},{"location":"pr%C3%A1ctica%202/#ejercicio-4_4","title":"Ejercicio 4","text":""},{"location":"pr%C3%A1ctica%202/#hacer-una-bifurcacion-del-repositorio-remoto-asalberlibro-git-en-githubclonar-el-repositorio-creado-en-la-cuenta-de-github-del-usuario-crear-una-nueva-rama-autoria-y-activarla-anadir-el-nombre-del-usuario-y-su-correo-al-fichero-autorestxt-anadir-los-cambios-a-la-zona-de-intercambio-temporal-hacer-un-commit-con-el-mensaje-anadido-nuevo-autor-subir-los-cambios-de-la-rama-autoria-al-repositorio-remoto-en-github-hacer-un-pull-request-de-los-cambios-en-la-rama-autoria","title":"Hacer una bifurcaci\u00f3n del repositorio remoto asalber/libro-git en GitHub.Clonar el repositorio creado en la cuenta de GitHub del usuario. Crear una nueva rama autoria y activarla. A\u00f1adir el nombre del usuario y su correo al fichero autores.txt. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit con el mensaje \u201cA\u00f1adido nuevo autor.\u201d Subir los cambios de la rama autoria al repositorio remoto en GitHub. Hacer un Pull Request de los cambios en la rama autoria.","text":"<p>Hacemos el fork, actualizamos el repositorio local, creamos la rama autoria, a\u00f1adimos el nombre del usuario y su correo al fichero autores.txt, a\u00f1adimos los cambios a la zona de intercambio temporal, hacemos un commit con el mensaje \"A\u00f1adido nuevo autor.\", subimos los cambios de la rama autoria al repositorio remoto en GitHub y hacemos un Pull Request de los cambios en la rama autoria:</p> <p></p> <p></p> <p></p>"}]}